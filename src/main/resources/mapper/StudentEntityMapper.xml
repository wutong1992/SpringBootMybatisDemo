<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo2.dao.StudentEntityMapper">
  <resultMap id="BaseResultMap" type="com.example.demo2.model.StudentEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, age, sex, birthday
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.demo2.model.StudentEntity">
    insert into student (id, name, age, 
      sex, birthday)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, 
      #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo2.model.StudentEntity">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo2.model.StudentEntity">
    update student
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo2.model.StudentEntity">
    update student
    set name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sex = #{sex,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="findAll" resultMap="BaseResultMap">
    select * from student
  </select>

  <!-- 查询所有老师信息 -->
  <select id="selectClazzWithId" resultType="com.example.demo2.model.ClazzEntity">
    select * from tb_clazz where id = #{clazz_id,jdbcType=INTEGER}
  </select>
  <resultMap id="teacherResultMap" type="com.example.demo2.model.TeacherEntity">
    <id property="id" column="id"/>
    <result property="name" column="name"/>
    <result property="sex" column="sex"/>
    <result property="age" column="age"/>
    <!-- 关联映射 -->
    <association property="clazz" column="clazz_id" javaType="com.example.demo2.model.ClazzEntity" select="selectClazzWithId"/>
  </resultMap>
  <select id="findAllTeachers" resultMap="teacherResultMap">
    select * from tb_teacher
  </select>

  <!-- 查询所有班级信息 -->
  <select id="selectTeachersWithClazzId" resultType="com.example.demo2.model.TeacherEntity">
    select * from tb_teacher where clazz_id = #{id}
  </select>
  <resultMap id="clazzResultMap" type="com.example.demo2.model.ClazzEntity">
    <id property="id" column="id"/>
    <result property="code" column="code"/>
    <collection property="teachers" column="id" javaType="ArrayList" ofType="com.example.demo2.model.TeacherEntity" select="selectTeachersWithClazzId"/>
  </resultMap>
  <select id="findAllClazzs" resultMap="clazzResultMap">
    select * from tb_clazz
  </select>

  <select id="findTeachersClazz1" resultType="com.example.demo2.model.TeacherEntity">
    select * from tb_teacher where clazz_id = 1
    <choose>
      <when test="sex != null">
        and sex = #{sex}
      </when>
      <when test="age != null">
        and age = #{age}
      </when>
      <otherwise>
        and id = 1
      </otherwise>
    </choose>
  </select>

  <select id="selectTeachersIn" resultType="com.example.demo2.model.TeacherEntity">
    select *
    from tb_teacher
    where id in
    <foreach collection="list" item="item" index="index" open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

</mapper>